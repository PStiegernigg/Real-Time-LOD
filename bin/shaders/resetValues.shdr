#version 430 core

///////////////////////////////////////////////////////////////////////////////////
// Calculates collapse errors and optimal placement positions
//
// @author Philipp Stiegernigg
///////////////////////////////////////////////////////////////////////////////////

#include "util.shdr"

#ifdef _compute_

layout(std430, binding = 2) buffer Vertices {
  Vertex vertices[];
};

uniform uint workSize;

layout(local_size_x = WORKGROUPSIZE, local_size_y = 1, local_size_z = 1) in;

void main() {
  
  //check work size range
  uint index = gl_GlobalInvocationID.x;
  if(!bool(vertices[index].valid) || index >= workSize) return;
  
  //reset minEdgeCosts and ID to maximum uint value
  vertices[index].minEdgeCost = 0xffffffff;
  vertices[index].minEdgeID = 0xffffffff;
}

#endif // _compute_
