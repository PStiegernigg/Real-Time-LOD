#version 430 core

///////////////////////////////////////////////////////////////////////////////////
// 
//
// @author Philipp Stiegernigg
///////////////////////////////////////////////////////////////////////////////////

#include "util.shdr"

#ifdef _compute_

layout(std430, binding = 0) buffer Edges {
  Edge edges[];
};

layout(std430, binding = 2) buffer Vertices {
  Vertex vertices[];
};

uniform uint workSize;
layout(local_size_x = WORKGROUPSIZE, local_size_y = 1, local_size_z = 1) in;

void main() {
  
  //check work size range
  uint index = gl_GlobalInvocationID.x;
  if(index >= workSize) return;
  
  edges[index].from = vertices[edges[index].from].collapseTarget; 
  edges[index].to = vertices[edges[index].to].collapseTarget;

  if(edges[index].from == edges[index].to) {
	edges[index].valid = FALSE;
  }
 
}

#endif // _compute_
