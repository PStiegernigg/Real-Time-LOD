#version 430 core

///////////////////////////////////////////////////////////////////////////////////
//
// @author Philipp Stiegernigg
///////////////////////////////////////////////////////////////////////////////////

#include "util.shdr"

#ifdef _compute_

layout(std430, binding = 2) buffer Vertices {
  Vertex vertices[];
};

layout(std430, binding = 3) buffer Faces {
  Face faces[];
};

layout(std430, binding = 6) buffer Indices {
  uint indices[];
};

uniform uint workSize;
layout(local_size_x = WORKGROUPSIZE, local_size_y = 1, local_size_z = 1) in;

void main() {
  
  //check work size range
  uint index = gl_GlobalInvocationID.x;
  if(index >= workSize) return;

  uvec3 faceIndices = uvec3(indices[index * 3], indices[index * 3 + 1], indices[index * 3 + 2]);

  indices[index * 3] = vertices[faceIndices.x].collapseTarget;
  indices[index * 3 + 1] = vertices[faceIndices.y].collapseTarget;
  indices[index * 3 + 2] = vertices[faceIndices.z].collapseTarget;

  //check if the face degenerated
  if(indices[index * 3] == indices[index * 3 + 1] || indices[index * 3] == indices[index * 3 + 2] || indices[index * 3 + 1] == indices[index * 3 + 2]) {
	faces[index].valid = FALSE;
  }
   
}

#endif // _compute_
